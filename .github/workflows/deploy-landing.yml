name: Deploy Nitrix Landing Page

on:
  push:
    branches: [ master, main ]
    paths:
      - 'nitrix-landing/**'
      - 'index.html'
      - '.github/workflows/deploy-landing.yml'
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'nitrix-landing/package.json'

      - name: Install dependencies
        run: |
          cd nitrix-landing
          npm ci

      - name: Build CSS with Tailwind
        run: |
          cd nitrix-landing
          npm run build

      - name: Prepare deployment files
        run: |
          # Create public directory
          mkdir -p public
          
          # Copy main landing page files
          cp nitrix-landing/index.html public/
          cp nitrix-landing/script.js public/
          
          # Copy built CSS
          cp -r nitrix-landing/dist public/ || echo "No dist directory found"
          
          # Copy assets if they exist
          cp -r nitrix-landing/assets public/ || echo "No assets directory found"
          
          # Create a simple fallback index.html if needed
          if [ ! -f public/index.html ]; then
            cp nitrix-landing/index.html public/index.html
          fi
          
          # Add CNAME for custom domain (optional)
          # echo "nitrix.ai" > public/CNAME

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'public'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4